const WebSocket=require("ws");const pty=require("node-pty");const wss=new WebSocket.Server({port:9999});const sessions=Object.create(null);wss.on("connection",ws=>{ws.once("message",message=>{const id=message.toString("utf8");let term=sessions[id];if(!term){term=createNewTerm(id);term.outputBuffer="";console.log("opened session, ID: "+id)}else{ws.send(term.outputBuffer)}term.on("data",onData);function onData(data){ws.send(data);term.outputBuffer+=data}ws.on("message",message=>{try{if(message.indexOf("__rows__")>-1){const dimensions=JSON.parse(message);term.resize(dimensions.__cols__,dimensions.__rows__)}else if(message.indexOf("__terminate__")>-1){term.kill();console.log("closed session, ID: "+id);ws.close();delete sessions[id]}else{term.write(message)}}catch(err){}});ws.on("close",()=>{term.removeAllListeners("data")})});function createNewTerm(id){const term=pty.spawn("bash",[],{name:"xterm",cols:57,rows:50,cwd:process.env.HOME,env:process.env});sessions[id]=term;return term}});